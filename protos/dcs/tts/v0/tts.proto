syntax = "proto3";
package dcs.tts.v0;
import "dcs/common/v0/common.proto";
option csharp_namespace = "RurouniJones.Dcs.Grpc.V0.Tts";
option go_package = "github.com/DCS-gRPC/go-bindings/dcs/v0/tts";

service TtsService {
  rpc Transmit(TransmitRequest) returns (TransmitResponse) {}
}

message TransmitRequest {
  // The text that is synthesized to speech and transmitted to SRS.
  string text = 1;

  // The radio frequency in Hz the transmission is send to. Example: 251000000
  // for 251.00MHz.
  uint64 frequency = 2;

  // Name of the SRS client. Defaults to "DCS-gRPC".
  optional string name = 3;

  // The origin of the transmission. Relevant if the SRS server has "Line of
  // Sight" and/or "Distance Limit" enabled.
  dcs.common.v0.Position position = 4;

  // The coalition of the transmission. Relevant if the SRS server has "Secure
  // Coalition Radios" enabled. Only Blue and Red are supported, all other
  // values will fallback to Blue.
  dcs.common.v0.Coalition coalition = 5;

  // The socket (hostname:port) of the SRS server to connect to. Defaults to
  // 127.0.0.1:5002 if not specified.
  optional string srs_addr = 6;

  // Whether to keep the request open until the whole transmission was sent. If
  // enabled, you can send the next transmission after you've received the
  // response for the previous one and be sure that they don't overlap (talk
  // over each other). If disabled, you'll receive a response right away (kind
  // of fire and forget).
  bool wait = 7;

  message Aws {
    // The voice the text is synthesized in, see:
    // https://docs.aws.amazon.com/polly/latest/dg/voicelist.html
    optional string voice = 1;

    // Your AWS API access key.
    string key = 2;

    // Your AWS API secret key.
    string secret = 3;

    // The AWS region identifier, see:
    // https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints
    string region = 4;
  }

  message Azure {
    // The voice the text is synthesized in, see:
    // https://learn.microsoft.com/en-us/azure/cognitive-services/speech-service/language-support?tabs=stt-tts
    optional string voice = 1;

    // Your Azure API key.
    string key = 2;

    // The Azure region code, see:
    // https://learn.microsoft.com/en-us/azure/cognitive-services/speech-service/regions#speech-service
    string region = 3;
  }

  message GCloud {
    // The voice the text is synthesized in, see:
    // https://cloud.google.com/text-to-speech/docs/voices
    optional string voice = 1;

    // Your Google Cloud API key.
    string key = 2;
  }

  message Windows {
    // The voice the text is synthesized in.
    optional string voice = 1;
  }

  oneof provider {
    Aws aws = 8;
    Azure azure = 9;
    GCloud gcloud = 10;
    Windows win = 11;
  }
}

message TransmitResponse {
}
